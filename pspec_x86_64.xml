<PISI>
    <Source>
        <Name>wayland</Name>
        <Packager>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Packager>
        <License>MIT</License>
        <PartOf>desktop.wayland</PartOf>
        <Summary xml:lang="en">Wayland is intended as a simpler replacement for X, easier to develop and maintain.</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://solus-project.com/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>wayland</Name>
        <Summary xml:lang="en">Wayland is intended as a simpler replacement for X, easier to develop and maintain.</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>desktop.wayland</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/lib*.so.*</Path>
        </Files>
    </Package>
    <Package>
        <Name>wayland-32bit</Name>
        <Summary xml:lang="en">32-bit libraries for wayland</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>emul32</PartOf>
        <RuntimeDependencies>
            <Dependency release="16">wayland</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/lib*.so.*</Path>
        </Files>
    </Package>
    <Package>
        <Name>wayland-32bit-devel</Name>
        <Summary xml:lang="en">Development files for 32-bit wayland</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="16">wayland-devel</Dependency>
            <Dependency release="16">wayland-32bit</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/lib*.so</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/*.pc</Path>
        </Files>
    </Package>
    <Package>
        <Name>wayland-devel</Name>
        <Summary xml:lang="en">Development files for wayland</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="16">wayland</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="executable">/usr/bin</Path>
            <Path fileType="header">/usr/include/</Path>
            <Path fileType="library">/usr/lib64/lib*.so</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/*.pc</Path>
            <Path fileType="data">/usr/share/aclocal</Path>
            <Path fileType="data">/usr/share/wayland</Path>
        </Files>
    </Package>
    <History>
        <Update release="16">
            <Date>2016-07-26</Date>
            <Version>1.10.0</Version>
            <Comment>Packaging update</Comment>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Update>
    </History>
</PISI>